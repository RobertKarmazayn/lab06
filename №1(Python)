import numpy as np

# Функция для вычисления значения f(x) = x1 + 5*x2 + exp(x1^2 + x2^2)
def func(x1, x2):
  return x1 + 5 * x2 + np.exp(x1*2 + x2*2)

# Метод покоординатного спуска
def coordinate_descent(learning_rate=0.1, max_iterations=1000, tolerance=1e-6):
    x1 = 5.0  # Начальное значение x1
    x2 = 5.0  # Начальное значение x2

    for i in range(max_iterations):
        curr_val = func(x1, x2)

        # Обновление x1 и x2 поочередно
        x1 = x1 - learning_rate * (1 + 2 * x1 * np.exp(x1*2 + x2*2))
        x2 = x2 - learning_rate * (5 + 2 * x2 * np.exp(x1*2 + x2*2))

        new_val = func(x1, x2)

        # Проверка условия сходимости
        if abs(new_val - curr_val) < tolerance:
            print(f"Сходимость достигнута после {i + 1} итераций.")
            print(f"Оптимальные значения: x1 = {x1}, x2 = {x2}")
            print(f"Минимальное значение функции: {new_val}")
            return x1, x2

    print(f"Достигнуто максимальное число итераций ({max_iterations}).")
    return x1, x2

# Запуск метода покоординатного спуска
optimal_x1, optimal_x2 = coordinate_descent()
